/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-12-27 08:59:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class FreeBoard_005fdelete_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1608690524000L));
    _jspx_dependants.put("jar:file:/C:/Stitker/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Stitker/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <script src=\"http://code.jquery.com/jquery-1.10.2.js\"></script> \r\n");
      out.write("    <title>Home</title>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    #popupDiv {  /* íìì°½ css */\r\n");
      out.write("    top : 0px;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    background: blue;\r\n");
      out.write("    width: 500px;\r\n");
      out.write("    height: 500px;\r\n");
      out.write("    display: none; \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #popup_mask { /* íì ë°°ê²½ css */\r\n");
      out.write("        position: fixed;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 1000px;\r\n");
      out.write("        top: 0px;\r\n");
      out.write("        left: 0px;\r\n");
      out.write("         display: none; \r\n");
      out.write("         background-color:#000;\r\n");
      out.write("         opacity: 0.8;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("    <button id=\"popOpenBtn\">Popup Open</button> \r\n");
      out.write(" \r\n");
      out.write("    <div id =\"popup_mask\" ></div> <!-- íì ë°°ê²½ DIV -->\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"popupDiv\"> <!-- íìì°½ -->\r\n");
      out.write("        <button id=\"popCloseBtn\">close</button>\r\n");
      out.write("    </div>\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("        \r\n");
      out.write("        $(\"#popOpenBtn\").click(function(event){  //íì Open ë²í¼ í´ë¦­ ì \r\n");
      out.write(" \r\n");
      out.write("             $(\"#popupDiv\").css({\r\n");
      out.write("                \"top\": (($(window).height()-$(\"#popupDiv\").outerHeight())/2+$(window).scrollTop())+\"px\",\r\n");
      out.write("                \"left\": (($(window).width()-$(\"#popupDiv\").outerWidth())/2+$(window).scrollLeft())+\"px\"\r\n");
      out.write("                //íìì°½ì ê°ì´ë°ë¡ ëì°ê¸° ìí´ íì¬ íë©´ì ê°ì´ë° ê°ê³¼ ì¤í¬ë¡¤ ê°ì ê³ì°íì¬ íìì°½ CSS ì¤ì \r\n");
      out.write("             \r\n");
      out.write("             }); \r\n");
      out.write("            \r\n");
      out.write("            $(\"#popup_mask\").css(\"display\",\"block\"); //íì ë·ë°°ê²½ display block\r\n");
      out.write("            $(\"#popupDiv\").css(\"display\",\"block\"); //íìì°½ display block\r\n");
      out.write("            \r\n");
      out.write("            $(\"body\").css(\"overflow\",\"hidden\");//body ì¤í¬ë¡¤ë° ìì ê¸°\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $(\"#popCloseBtn\").click(function(event){\r\n");
      out.write("            $(\"#popup_mask\").css(\"display\",\"none\"); //íìì°½ ë·ë°°ê²½ display none\r\n");
      out.write("            $(\"#popupDiv\").css(\"display\",\"none\"); //íìì°½ display none\r\n");
      out.write("            $(\"body\").css(\"overflow\",\"auto\");//body ì¤í¬ë¡¤ë° ìì±\r\n");
      out.write("        });\r\n");
      out.write("     \r\n");
      out.write("    \r\n");
      out.write("    });\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
